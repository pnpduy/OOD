#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OODWebsite
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CsdlPortal")]
	public partial class PortalDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    partial void InsertCTDAOTAO(CTDAOTAO instance);
    partial void UpdateCTDAOTAO(CTDAOTAO instance);
    partial void DeleteCTDAOTAO(CTDAOTAO instance);
    partial void InsertDANGKY(DANGKY instance);
    partial void UpdateDANGKY(DANGKY instance);
    partial void DeleteDANGKY(DANGKY instance);
    partial void InsertGIANGVIEN(GIANGVIEN instance);
    partial void UpdateGIANGVIEN(GIANGVIEN instance);
    partial void DeleteGIANGVIEN(GIANGVIEN instance);
    partial void InsertHOCPHAN(HOCPHAN instance);
    partial void UpdateHOCPHAN(HOCPHAN instance);
    partial void DeleteHOCPHAN(HOCPHAN instance);
    partial void InsertKHOA(KHOA instance);
    partial void UpdateKHOA(KHOA instance);
    partial void DeleteKHOA(KHOA instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertLOPHOCPHAN(LOPHOCPHAN instance);
    partial void UpdateLOPHOCPHAN(LOPHOCPHAN instance);
    partial void DeleteLOPHOCPHAN(LOPHOCPHAN instance);
    partial void InsertMOLOP(MOLOP instance);
    partial void UpdateMOLOP(MOLOP instance);
    partial void DeleteMOLOP(MOLOP instance);
    partial void InsertNVPDT(NVPDT instance);
    partial void UpdateNVPDT(NVPDT instance);
    partial void DeleteNVPDT(NVPDT instance);
    #endregion
		
		public PortalDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CsdlPortalConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PortalDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BangThamSo> BangThamSos
		{
			get
			{
				return this.GetTable<BangThamSo>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<CTDAOTAO> CTDAOTAOs
		{
			get
			{
				return this.GetTable<CTDAOTAO>();
			}
		}
		
		public System.Data.Linq.Table<DANGKY> DANGKies
		{
			get
			{
				return this.GetTable<DANGKY>();
			}
		}
		
		public System.Data.Linq.Table<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this.GetTable<GIANGVIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOCPHAN> HOCPHANs
		{
			get
			{
				return this.GetTable<HOCPHAN>();
			}
		}
		
		public System.Data.Linq.Table<KHOA> KHOAs
		{
			get
			{
				return this.GetTable<KHOA>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<LOPHOCPHAN> LOPHOCPHANs
		{
			get
			{
				return this.GetTable<LOPHOCPHAN>();
			}
		}
		
		public System.Data.Linq.Table<MOLOP> MOLOPs
		{
			get
			{
				return this.GetTable<MOLOP>();
			}
		}
		
		public System.Data.Linq.Table<NVPDT> NVPDTs
		{
			get
			{
				return this.GetTable<NVPDT>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[sp.NVPDT_Login_Check]")]
		public int sp_NVPDT_Login_Check([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(20)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(30)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> res)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, password, res);
			res = ((System.Nullable<bool>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[sp.SV_Login_Check]")]
		public int sp_SV_Login_Check([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(20)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(30)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> res)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, password, res);
			res = ((System.Nullable<bool>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangThamSo")]
	public partial class BangThamSo
	{
		
		private int _Stt;
		
		private string _MoTa;
		
		private object _GiaTri;
		
		public BangThamSo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Stt
		{
			get
			{
				return this._Stt;
			}
			set
			{
				if ((this._Stt != value))
				{
					this._Stt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this._MoTa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTri", DbType="Variant NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public object GiaTri
		{
			get
			{
				return this._GiaTri;
			}
			set
			{
				if ((this._GiaTri != value))
				{
					this._GiaTri = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MSSV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private string _MatKhau;
		
		private int _KhoaHoc;
		
		private int _MaCTDT;
		
		private int _MaLop;
		
		private EntitySet<DANGKY> _DANGKies;
		
		private EntityRef<CTDAOTAO> _CTDAOTAO;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMSSVChanging(string value);
    partial void OnMSSVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnKhoaHocChanging(int value);
    partial void OnKhoaHocChanged();
    partial void OnMaCTDTChanging(int value);
    partial void OnMaCTDTChanged();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._DANGKies = new EntitySet<DANGKY>(new Action<DANGKY>(this.attach_DANGKies), new Action<DANGKY>(this.detach_DANGKies));
			this._CTDAOTAO = default(EntityRef<CTDAOTAO>);
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSSV", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MSSV
		{
			get
			{
				return this._MSSV;
			}
			set
			{
				if ((this._MSSV != value))
				{
					this.OnMSSVChanging(value);
					this.SendPropertyChanging();
					this._MSSV = value;
					this.SendPropertyChanged("MSSV");
					this.OnMSSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhoaHoc", DbType="Int NOT NULL")]
		public int KhoaHoc
		{
			get
			{
				return this._KhoaHoc;
			}
			set
			{
				if ((this._KhoaHoc != value))
				{
					this.OnKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._KhoaHoc = value;
					this.SendPropertyChanged("KhoaHoc");
					this.OnKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTDT", DbType="Int NOT NULL")]
		public int MaCTDT
		{
			get
			{
				return this._MaCTDT;
			}
			set
			{
				if ((this._MaCTDT != value))
				{
					if (this._CTDAOTAO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTDTChanging(value);
					this.SendPropertyChanging();
					this._MaCTDT = value;
					this.SendPropertyChanged("MaCTDT");
					this.OnMaCTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Int NOT NULL")]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_DANGKY", Storage="_DANGKies", ThisKey="Id", OtherKey="Id")]
		public EntitySet<DANGKY> DANGKies
		{
			get
			{
				return this._DANGKies;
			}
			set
			{
				this._DANGKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTDAOTAO_SINHVIEN", Storage="_CTDAOTAO", ThisKey="MaCTDT", OtherKey="MaCTDT", IsForeignKey=true)]
		public CTDAOTAO CTDAOTAO
		{
			get
			{
				return this._CTDAOTAO.Entity;
			}
			set
			{
				CTDAOTAO previousValue = this._CTDAOTAO.Entity;
				if (((previousValue != value) 
							|| (this._CTDAOTAO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTDAOTAO.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._CTDAOTAO.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._MaCTDT = value.MaCTDT;
					}
					else
					{
						this._MaCTDT = default(int);
					}
					this.SendPropertyChanged("CTDAOTAO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(int);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDAOTAO")]
	public partial class CTDAOTAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCTDT;
		
		private string _TenCTDT;
		
		private string _Nganh;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTDTChanging(int value);
    partial void OnMaCTDTChanged();
    partial void OnTenCTDTChanging(string value);
    partial void OnTenCTDTChanged();
    partial void OnNganhChanging(string value);
    partial void OnNganhChanged();
    #endregion
		
		public CTDAOTAO()
		{
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTDT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCTDT
		{
			get
			{
				return this._MaCTDT;
			}
			set
			{
				if ((this._MaCTDT != value))
				{
					this.OnMaCTDTChanging(value);
					this.SendPropertyChanging();
					this._MaCTDT = value;
					this.SendPropertyChanged("MaCTDT");
					this.OnMaCTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCTDT", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenCTDT
		{
			get
			{
				return this._TenCTDT;
			}
			set
			{
				if ((this._TenCTDT != value))
				{
					this.OnTenCTDTChanging(value);
					this.SendPropertyChanging();
					this._TenCTDT = value;
					this.SendPropertyChanged("TenCTDT");
					this.OnTenCTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nganh", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Nganh
		{
			get
			{
				return this._Nganh;
			}
			set
			{
				if ((this._Nganh != value))
				{
					this.OnNganhChanging(value);
					this.SendPropertyChanging();
					this._Nganh = value;
					this.SendPropertyChanged("Nganh");
					this.OnNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTDAOTAO_SINHVIEN", Storage="_SINHVIENs", ThisKey="MaCTDT", OtherKey="MaCTDT")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CTDAOTAO = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CTDAOTAO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGKY")]
	public partial class DANGKY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLHP;
		
		private int _Id;
		
		private System.DateTime _ThoiGianBD;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
		private EntityRef<LOPHOCPHAN> _LOPHOCPHAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHPChanging(int value);
    partial void OnMaLHPChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnThoiGianBDChanging(System.DateTime value);
    partial void OnThoiGianBDChanged();
    #endregion
		
		public DANGKY()
		{
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			this._LOPHOCPHAN = default(EntityRef<LOPHOCPHAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLHP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLHP
		{
			get
			{
				return this._MaLHP;
			}
			set
			{
				if ((this._MaLHP != value))
				{
					if (this._LOPHOCPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLHPChanging(value);
					this.SendPropertyChanging();
					this._MaLHP = value;
					this.SendPropertyChanged("MaLHP");
					this.OnMaLHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBD", DbType="Date NOT NULL")]
		public System.DateTime ThoiGianBD
		{
			get
			{
				return this._ThoiGianBD;
			}
			set
			{
				if ((this._ThoiGianBD != value))
				{
					this.OnThoiGianBDChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBD = value;
					this.SendPropertyChanged("ThoiGianBD");
					this.OnThoiGianBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_DANGKY", Storage="_SINHVIEN", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.DANGKies.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.DANGKies.Add(this);
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_DANGKY", Storage="_LOPHOCPHAN", ThisKey="MaLHP", OtherKey="MaLHP", IsForeignKey=true)]
		public LOPHOCPHAN LOPHOCPHAN
		{
			get
			{
				return this._LOPHOCPHAN.Entity;
			}
			set
			{
				LOPHOCPHAN previousValue = this._LOPHOCPHAN.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOCPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOCPHAN.Entity = null;
						previousValue.DANGKies.Remove(this);
					}
					this._LOPHOCPHAN.Entity = value;
					if ((value != null))
					{
						value.DANGKies.Add(this);
						this._MaLHP = value.MaLHP;
					}
					else
					{
						this._MaLHP = default(int);
					}
					this.SendPropertyChanged("LOPHOCPHAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGVIEN")]
	public partial class GIANGVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private string _HocVi;
		
		private string _Email;
		
		private EntitySet<MOLOP> _MOLOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnHocViChanging(string value);
    partial void OnHocViChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public GIANGVIEN()
		{
			this._MOLOPs = new EntitySet<MOLOP>(new Action<MOLOP>(this.attach_MOLOPs), new Action<MOLOP>(this.detach_MOLOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocVi", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string HocVi
		{
			get
			{
				return this._HocVi;
			}
			set
			{
				if ((this._HocVi != value))
				{
					this.OnHocViChanging(value);
					this.SendPropertyChanging();
					this._HocVi = value;
					this.SendPropertyChanged("HocVi");
					this.OnHocViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_MOLOP", Storage="_MOLOPs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<MOLOP> MOLOPs
		{
			get
			{
				return this._MOLOPs;
			}
			set
			{
				this._MOLOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MOLOPs(MOLOP entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_MOLOPs(MOLOP entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCPHAN")]
	public partial class HOCPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSHP;
		
		private string _MaHP;
		
		private string _TenHP;
		
		private int _SoTinChi;
		
		private int _MaSoKhoa;
		
		private System.Nullable<int> _TuyenQuyet;
		
		private EntitySet<HOCPHAN> _HOCPHANs;
		
		private EntitySet<MOLOP> _MOLOPs;
		
		private EntityRef<HOCPHAN> _HOCPHAN1;
		
		private EntityRef<KHOA> _KHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSHPChanging(int value);
    partial void OnMSHPChanged();
    partial void OnMaHPChanging(string value);
    partial void OnMaHPChanged();
    partial void OnTenHPChanging(string value);
    partial void OnTenHPChanged();
    partial void OnSoTinChiChanging(int value);
    partial void OnSoTinChiChanged();
    partial void OnMaSoKhoaChanging(int value);
    partial void OnMaSoKhoaChanged();
    partial void OnTuyenQuyetChanging(System.Nullable<int> value);
    partial void OnTuyenQuyetChanged();
    #endregion
		
		public HOCPHAN()
		{
			this._HOCPHANs = new EntitySet<HOCPHAN>(new Action<HOCPHAN>(this.attach_HOCPHANs), new Action<HOCPHAN>(this.detach_HOCPHANs));
			this._MOLOPs = new EntitySet<MOLOP>(new Action<MOLOP>(this.attach_MOLOPs), new Action<MOLOP>(this.detach_MOLOPs));
			this._HOCPHAN1 = default(EntityRef<HOCPHAN>);
			this._KHOA = default(EntityRef<KHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSHP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MSHP
		{
			get
			{
				return this._MSHP;
			}
			set
			{
				if ((this._MSHP != value))
				{
					this.OnMSHPChanging(value);
					this.SendPropertyChanging();
					this._MSHP = value;
					this.SendPropertyChanged("MSHP");
					this.OnMSHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHP", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaHP
		{
			get
			{
				return this._MaHP;
			}
			set
			{
				if ((this._MaHP != value))
				{
					this.OnMaHPChanging(value);
					this.SendPropertyChanging();
					this._MaHP = value;
					this.SendPropertyChanged("MaHP");
					this.OnMaHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHP
		{
			get
			{
				return this._TenHP;
			}
			set
			{
				if ((this._TenHP != value))
				{
					this.OnTenHPChanging(value);
					this.SendPropertyChanging();
					this._TenHP = value;
					this.SendPropertyChanged("TenHP");
					this.OnTenHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTinChi", DbType="Int NOT NULL")]
		public int SoTinChi
		{
			get
			{
				return this._SoTinChi;
			}
			set
			{
				if ((this._SoTinChi != value))
				{
					this.OnSoTinChiChanging(value);
					this.SendPropertyChanging();
					this._SoTinChi = value;
					this.SendPropertyChanged("SoTinChi");
					this.OnSoTinChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoKhoa", DbType="Int NOT NULL")]
		public int MaSoKhoa
		{
			get
			{
				return this._MaSoKhoa;
			}
			set
			{
				if ((this._MaSoKhoa != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaSoKhoa = value;
					this.SendPropertyChanged("MaSoKhoa");
					this.OnMaSoKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TuyenQuyet", DbType="Int")]
		public System.Nullable<int> TuyenQuyet
		{
			get
			{
				return this._TuyenQuyet;
			}
			set
			{
				if ((this._TuyenQuyet != value))
				{
					if (this._HOCPHAN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTuyenQuyetChanging(value);
					this.SendPropertyChanging();
					this._TuyenQuyet = value;
					this.SendPropertyChanged("TuyenQuyet");
					this.OnTuyenQuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCPHAN_HOCPHAN", Storage="_HOCPHANs", ThisKey="MSHP", OtherKey="TuyenQuyet")]
		public EntitySet<HOCPHAN> HOCPHANs
		{
			get
			{
				return this._HOCPHANs;
			}
			set
			{
				this._HOCPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCPHAN_MOLOP", Storage="_MOLOPs", ThisKey="MSHP", OtherKey="MSHP")]
		public EntitySet<MOLOP> MOLOPs
		{
			get
			{
				return this._MOLOPs;
			}
			set
			{
				this._MOLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCPHAN_HOCPHAN", Storage="_HOCPHAN1", ThisKey="TuyenQuyet", OtherKey="MSHP", IsForeignKey=true)]
		public HOCPHAN HOCPHAN1
		{
			get
			{
				return this._HOCPHAN1.Entity;
			}
			set
			{
				HOCPHAN previousValue = this._HOCPHAN1.Entity;
				if (((previousValue != value) 
							|| (this._HOCPHAN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCPHAN1.Entity = null;
						previousValue.HOCPHANs.Remove(this);
					}
					this._HOCPHAN1.Entity = value;
					if ((value != null))
					{
						value.HOCPHANs.Add(this);
						this._TuyenQuyet = value.MSHP;
					}
					else
					{
						this._TuyenQuyet = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOCPHAN1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_HOCPHAN", Storage="_KHOA", ThisKey="MaSoKhoa", OtherKey="MaSoKhoa", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.HOCPHANs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.HOCPHANs.Add(this);
						this._MaSoKhoa = value.MaSoKhoa;
					}
					else
					{
						this._MaSoKhoa = default(int);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCPHANs(HOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.HOCPHAN1 = this;
		}
		
		private void detach_HOCPHANs(HOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.HOCPHAN1 = null;
		}
		
		private void attach_MOLOPs(MOLOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCPHAN = this;
		}
		
		private void detach_MOLOPs(MOLOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCPHAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA")]
	public partial class KHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoKhoa;
		
		private string _MaKhoa;
		
		private string _TenKhoa;
		
		private EntitySet<HOCPHAN> _HOCPHANs;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoKhoaChanging(int value);
    partial void OnMaSoKhoaChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    #endregion
		
		public KHOA()
		{
			this._HOCPHANs = new EntitySet<HOCPHAN>(new Action<HOCPHAN>(this.attach_HOCPHANs), new Action<HOCPHAN>(this.detach_HOCPHANs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoKhoa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSoKhoa
		{
			get
			{
				return this._MaSoKhoa;
			}
			set
			{
				if ((this._MaSoKhoa != value))
				{
					this.OnMaSoKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaSoKhoa = value;
					this.SendPropertyChanged("MaSoKhoa");
					this.OnMaSoKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_HOCPHAN", Storage="_HOCPHANs", ThisKey="MaSoKhoa", OtherKey="MaSoKhoa")]
		public EntitySet<HOCPHAN> HOCPHANs
		{
			get
			{
				return this._HOCPHANs;
			}
			set
			{
				this._HOCPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_LOPs", ThisKey="MaSoKhoa", OtherKey="MaSoKhoa")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCPHANs(HOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_HOCPHANs(HOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLop;
		
		private string _TenLop;
		
		private int _MaSoKhoa;
		
		private int _SiSo;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
		private EntityRef<KHOA> _KHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaSoKhoaChanging(int value);
    partial void OnMaSoKhoaChanged();
    partial void OnSiSoChanging(int value);
    partial void OnSiSoChanged();
    #endregion
		
		public LOP()
		{
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			this._KHOA = default(EntityRef<KHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoKhoa", DbType="Int NOT NULL")]
		public int MaSoKhoa
		{
			get
			{
				return this._MaSoKhoa;
			}
			set
			{
				if ((this._MaSoKhoa != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaSoKhoa = value;
					this.SendPropertyChanged("MaSoKhoa");
					this.OnMaSoKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiSo", DbType="Int NOT NULL")]
		public int SiSo
		{
			get
			{
				return this._SiSo;
			}
			set
			{
				if ((this._SiSo != value))
				{
					this.OnSiSoChanging(value);
					this.SendPropertyChanging();
					this._SiSo = value;
					this.SendPropertyChanged("SiSo");
					this.OnSiSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_SINHVIENs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_KHOA", ThisKey="MaSoKhoa", OtherKey="MaSoKhoa", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaSoKhoa = value.MaSoKhoa;
					}
					else
					{
						this._MaSoKhoa = default(int);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOPHOCPHAN")]
	public partial class LOPHOCPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLHP;
		
		private string _TenLop;
		
		private int _SiSo;
		
		private string _LT_TH;
		
		private string _Thu;
		
		private int _TietBD;
		
		private int _TietKT;
		
		private string _Phong;
		
		private string _DiaDiem;
		
		private int _KhoaHoc;
		
		private string _Huy;
		
		private EntitySet<DANGKY> _DANGKies;
		
		private EntitySet<MOLOP> _MOLOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHPChanging(int value);
    partial void OnMaLHPChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnSiSoChanging(int value);
    partial void OnSiSoChanged();
    partial void OnLT_THChanging(string value);
    partial void OnLT_THChanged();
    partial void OnThuChanging(string value);
    partial void OnThuChanged();
    partial void OnTietBDChanging(int value);
    partial void OnTietBDChanged();
    partial void OnTietKTChanging(int value);
    partial void OnTietKTChanged();
    partial void OnPhongChanging(string value);
    partial void OnPhongChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    partial void OnKhoaHocChanging(int value);
    partial void OnKhoaHocChanged();
    partial void OnHuyChanging(string value);
    partial void OnHuyChanged();
    #endregion
		
		public LOPHOCPHAN()
		{
			this._DANGKies = new EntitySet<DANGKY>(new Action<DANGKY>(this.attach_DANGKies), new Action<DANGKY>(this.detach_DANGKies));
			this._MOLOPs = new EntitySet<MOLOP>(new Action<MOLOP>(this.attach_MOLOPs), new Action<MOLOP>(this.detach_MOLOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLHP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLHP
		{
			get
			{
				return this._MaLHP;
			}
			set
			{
				if ((this._MaLHP != value))
				{
					this.OnMaLHPChanging(value);
					this.SendPropertyChanging();
					this._MaLHP = value;
					this.SendPropertyChanged("MaLHP");
					this.OnMaLHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiSo", DbType="Int NOT NULL")]
		public int SiSo
		{
			get
			{
				return this._SiSo;
			}
			set
			{
				if ((this._SiSo != value))
				{
					this.OnSiSoChanging(value);
					this.SendPropertyChanging();
					this._SiSo = value;
					this.SendPropertyChanged("SiSo");
					this.OnSiSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LT_TH", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LT_TH
		{
			get
			{
				return this._LT_TH;
			}
			set
			{
				if ((this._LT_TH != value))
				{
					this.OnLT_THChanging(value);
					this.SendPropertyChanging();
					this._LT_TH = value;
					this.SendPropertyChanged("LT_TH");
					this.OnLT_THChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thu", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Thu
		{
			get
			{
				return this._Thu;
			}
			set
			{
				if ((this._Thu != value))
				{
					this.OnThuChanging(value);
					this.SendPropertyChanging();
					this._Thu = value;
					this.SendPropertyChanged("Thu");
					this.OnThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TietBD", DbType="Int NOT NULL")]
		public int TietBD
		{
			get
			{
				return this._TietBD;
			}
			set
			{
				if ((this._TietBD != value))
				{
					this.OnTietBDChanging(value);
					this.SendPropertyChanging();
					this._TietBD = value;
					this.SendPropertyChanged("TietBD");
					this.OnTietBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TietKT", DbType="Int NOT NULL")]
		public int TietKT
		{
			get
			{
				return this._TietKT;
			}
			set
			{
				if ((this._TietKT != value))
				{
					this.OnTietKTChanging(value);
					this.SendPropertyChanging();
					this._TietKT = value;
					this.SendPropertyChanged("TietKT");
					this.OnTietKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhoaHoc", DbType="Int NOT NULL")]
		public int KhoaHoc
		{
			get
			{
				return this._KhoaHoc;
			}
			set
			{
				if ((this._KhoaHoc != value))
				{
					this.OnKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._KhoaHoc = value;
					this.SendPropertyChanged("KhoaHoc");
					this.OnKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Huy", DbType="NVarChar(3)")]
		public string Huy
		{
			get
			{
				return this._Huy;
			}
			set
			{
				if ((this._Huy != value))
				{
					this.OnHuyChanging(value);
					this.SendPropertyChanging();
					this._Huy = value;
					this.SendPropertyChanged("Huy");
					this.OnHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_DANGKY", Storage="_DANGKies", ThisKey="MaLHP", OtherKey="MaLHP")]
		public EntitySet<DANGKY> DANGKies
		{
			get
			{
				return this._DANGKies;
			}
			set
			{
				this._DANGKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_MOLOP", Storage="_MOLOPs", ThisKey="MaLHP", OtherKey="MaLHP")]
		public EntitySet<MOLOP> MOLOPs
		{
			get
			{
				return this._MOLOPs;
			}
			set
			{
				this._MOLOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = this;
		}
		
		private void detach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = null;
		}
		
		private void attach_MOLOPs(MOLOP entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = this;
		}
		
		private void detach_MOLOPs(MOLOP entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MOLOP")]
	public partial class MOLOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLHP;
		
		private int _MaGV;
		
		private int _MSHP;
		
		private int _MaNV;
		
		private int _HocKy;
		
		private int _Nam;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
		private EntityRef<HOCPHAN> _HOCPHAN;
		
		private EntityRef<LOPHOCPHAN> _LOPHOCPHAN;
		
		private EntityRef<NVPDT> _NVPDT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHPChanging(int value);
    partial void OnMaLHPChanged();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    partial void OnMSHPChanging(int value);
    partial void OnMSHPChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnHocKyChanging(int value);
    partial void OnHocKyChanged();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    #endregion
		
		public MOLOP()
		{
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			this._HOCPHAN = default(EntityRef<HOCPHAN>);
			this._LOPHOCPHAN = default(EntityRef<LOPHOCPHAN>);
			this._NVPDT = default(EntityRef<NVPDT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLHP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLHP
		{
			get
			{
				return this._MaLHP;
			}
			set
			{
				if ((this._MaLHP != value))
				{
					if (this._LOPHOCPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLHPChanging(value);
					this.SendPropertyChanging();
					this._MaLHP = value;
					this.SendPropertyChanged("MaLHP");
					this.OnMaLHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int NOT NULL")]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSHP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MSHP
		{
			get
			{
				return this._MSHP;
			}
			set
			{
				if ((this._MSHP != value))
				{
					if (this._HOCPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSHPChanging(value);
					this.SendPropertyChanging();
					this._MSHP = value;
					this.SendPropertyChanged("MSHP");
					this.OnMSHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NVPDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_MOLOP", Storage="_GIANGVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.MOLOPs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.MOLOPs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(int);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCPHAN_MOLOP", Storage="_HOCPHAN", ThisKey="MSHP", OtherKey="MSHP", IsForeignKey=true)]
		public HOCPHAN HOCPHAN
		{
			get
			{
				return this._HOCPHAN.Entity;
			}
			set
			{
				HOCPHAN previousValue = this._HOCPHAN.Entity;
				if (((previousValue != value) 
							|| (this._HOCPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCPHAN.Entity = null;
						previousValue.MOLOPs.Remove(this);
					}
					this._HOCPHAN.Entity = value;
					if ((value != null))
					{
						value.MOLOPs.Add(this);
						this._MSHP = value.MSHP;
					}
					else
					{
						this._MSHP = default(int);
					}
					this.SendPropertyChanged("HOCPHAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_MOLOP", Storage="_LOPHOCPHAN", ThisKey="MaLHP", OtherKey="MaLHP", IsForeignKey=true)]
		public LOPHOCPHAN LOPHOCPHAN
		{
			get
			{
				return this._LOPHOCPHAN.Entity;
			}
			set
			{
				LOPHOCPHAN previousValue = this._LOPHOCPHAN.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOCPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOCPHAN.Entity = null;
						previousValue.MOLOPs.Remove(this);
					}
					this._LOPHOCPHAN.Entity = value;
					if ((value != null))
					{
						value.MOLOPs.Add(this);
						this._MaLHP = value.MaLHP;
					}
					else
					{
						this._MaLHP = default(int);
					}
					this.SendPropertyChanged("LOPHOCPHAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NVPDT_MOLOP", Storage="_NVPDT", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NVPDT NVPDT
		{
			get
			{
				return this._NVPDT.Entity;
			}
			set
			{
				NVPDT previousValue = this._NVPDT.Entity;
				if (((previousValue != value) 
							|| (this._NVPDT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NVPDT.Entity = null;
						previousValue.MOLOPs.Remove(this);
					}
					this._NVPDT.Entity = value;
					if ((value != null))
					{
						value.MOLOPs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NVPDT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NVPDT")]
	public partial class NVPDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _TenNV;
		
		private string _GioiTinh;
		
		private string _email;
		
		private string _Matkhau;
		
		private EntitySet<MOLOP> _MOLOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    #endregion
		
		public NVPDT()
		{
			this._MOLOPs = new EntitySet<MOLOP>(new Action<MOLOP>(this.attach_MOLOPs), new Action<MOLOP>(this.detach_MOLOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NVPDT_MOLOP", Storage="_MOLOPs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<MOLOP> MOLOPs
		{
			get
			{
				return this._MOLOPs;
			}
			set
			{
				this._MOLOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MOLOPs(MOLOP entity)
		{
			this.SendPropertyChanging();
			entity.NVPDT = this;
		}
		
		private void detach_MOLOPs(MOLOP entity)
		{
			this.SendPropertyChanging();
			entity.NVPDT = null;
		}
	}
}
#pragma warning restore 1591
